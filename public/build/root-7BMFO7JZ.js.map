{
  "version": 3,
  "sources": ["empty-module:~/utils/theme.server", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\n\nimport {\n  ThemeBody,\n  ThemeHead,\n  ThemeProvider,\n  useTheme,\n} from \"~/utils/theme-provider\";\nimport type { Theme } from \"~/utils/theme-provider\";\nimport { getThemeSession } from \"~/utils/theme.server\";\n\nimport appStylesheetUrl from \"./styles/app.css\";\n\nexport type LoaderData = {\n  theme: Theme | null;\n};\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: appStylesheetUrl }];\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request);\n\n  const data: LoaderData = {\n    theme: themeSession.getTheme(),\n  };\n\n  return data;\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  viewport: \"width=device-width,initial-scale=1\",\n  title: \"Diogo, but in the Web\",\n  description: \"Welcome to my website!\",\n});\n\nfunction App() {\n  const data = useLoaderData<LoaderData>();\n  const [theme] = useTheme();\n\n  return (\n    <html lang=\"en\" className={theme ?? \"\"}>\n      <head>\n        <Meta />\n        <Links />\n        <ThemeHead ssrTheme={Boolean(data.theme)} />\n      </head>\n      <body>\n        <Outlet />\n        <ThemeBody ssrTheme={Boolean(data.theme)} />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default function AppWithProviders() {\n  const data = useLoaderData<LoaderData>();\n\n  return (\n    <ThemeProvider specifiedTheme={data.theme}>\n      <App />\n    </ThemeProvider>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACsBlB,mBAAgC;;;;;;AAtBhC;AA8BO,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,YAAiB,CAAC;AACvD;AAYO,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,aAAa;AACf;AAEA,SAAS,MAAM;AACb,QAAM,OAAO,cAA0B;AACvC,QAAM,CAAC,KAAK,IAAI,SAAS;AAEzB,SACE,mDAAC;AAAA,IAAK,MAAK;AAAA,IAAK,WAAW,wBAAS;AAAA,IAClC;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UACP,mDAAC;AAAA,YAAU,UAAU,QAAQ,KAAK,KAAK;AAAA,aAAvC;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA;AAAA,SAH5C;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC;AAAA,YAAU,UAAU,QAAQ,KAAK,KAAK;AAAA,aAAvC;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA,UAC1C,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA,SALd;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;AAEe,SAAR,mBAAoC;AACzC,QAAM,OAAO,cAA0B;AAEvC,SACE,mDAAC;AAAA,IAAc,gBAAgB,KAAK;AAAA,IAClC,6DAAC,SAAD;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA,KADP;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;",
  "names": []
}
